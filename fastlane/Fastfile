# Customise this file, documentation can be found here:
# https://github.com/KrauseFx/fastlane/tree/master/docs
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.13.0"

default_platform :mac

platform :mac do

  before_all do |lane|
  end

  lane :prebuild do
    cocoapods
  end

  lane :postbuild do
    # nada
  end

  desc "Runs all the tests"
  lane :test do

    xcodebuild(
      test: true,
      scheme: 'Buildasaur',
      workspace: 'Buildasaur.xcworkspace'
    )

  end

  desc "Archives (and in the future will upload a new release to GitHub)"
  lane :github do

    # prep the local state
    ensure_git_status_clean
    ensure_git_branch(branch: "swift-2")
    git_pull

    # TODO: up the version in the project

    # ask for the version
    version = prompt(text: 'New Version Tag: ')
    title = prompt(text: 'Release Title: ')
    description = prompt(text: "Release changelog: ",
                         multi_line_end_keyword: "END")

    # create a new release on GitHub
    repo_url = "czechboy0/Buildasaur"
    set_github_release(
      repository_name: repo_url,
      api_token: ENV["GITHUB_TOKEN"],
      name: [version, title].join(" - "),
      tag_name: version,
      description: description,
      is_draft: false,
      is_prerelease: false
    )

    # TODO: workaround till https://github.com/KrauseFx/fastlane/pull/446 gets into a release
    # then let set_github_release already return the JSON so that we can use it
    release = get_github_release(
        url: repo_url,
        version: version
      )

    cocoapods

    # TODO: create a xcodeserver_download_asset action to dw the archive from XCS
    # TODO: create a github_release_upload_asset action to upload a build .app to the release
    xcodebuild(
      test: true,
      archive: true,
      archive_path: './build/Buildasaur.xcarchive',
      scheme: 'Buildasaur',
      workspace: 'Buildasaur.xcworkspace'
    )

    # notify us on slack
    slack(
      slack_url: ENV['SLACK_RELEASES_URL'],
      message: "Successfully released [Buildasaur #{version}](#{release['html_url']}) :rocket:",
      payload: {
        "New" => release['body']
      }
    )

    # regenerate changelog to get it committed
    # TODO: is there a "commit" fastlane action?
    sh "cd .. && github_changelog_generator -t $GITHUB_TOKEN"

  end
end
